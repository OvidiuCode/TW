Începuturi și controverse în programarea logică
Dupa algoritmul lui Herbrand (1930), aplicare in urma careia se poate gasi o interpretare care contrazice o formula φ a logicii predicatelor dacă φ nu este logic adevărat, Gilmore (1960) a fost primul care a încercat să implementeze metoda lui Herbrand pe un calculator. Implementarea lui Gilmore se baza pe faptul că o clauză este logic adevarată, dacă şi numai dacă negaţia sa este contrazisă în una din interpretările limbajului.
Prin urmare, în programul său există o procedură care formează propoziţii din logica predicatelor cărora le este verificată periodic consistenţa. Cu toate acestea, programul lui Gilmore nu era în stare să analizeze formule foarte complexe din LPr. După publicarea algoritmului de unificare al lui Robinson, Loveland (1970) a fost primul care a aplicat rezoluţia liniară cu o funcţie de selecţie. Aceasta este rezoluţia în timpul căreia alegem o clauză, o rezolvăm cu alta, rezolvăm rezolventul cu o a treia clauză şi continuăm rezolvând întotdeauna ultimul rezolvent până găsim o clauză de programare vidă.
Cu primii paşi (1972) în programarea logică sunt crediţati Kowalski şi Colmerauer. Kowalski a fost primul care a exprimat logic interpretarea procedurală a clauzei Horn şi a arătat că o regulă de forma:
A:-B1,B2,...,Bn
poate fi atât citită cât şi executată printr-un limbaj de programare recursiv. În acelasi timp, Colmerauer şi echipa sa de cercetare au dezvoltat în FORTRAN un limbaj de programare în vederea utilizării ca demonstrator de teoreme, care a implementat interpretarea procedurală a lui Kowalski.
Piatra de temelie a limbajului PROLOG (PROgrammer en LOGique) fusese pusa! Primul interpretor PROLOG, adică programul care traduce un text inteligibil pentru om (fişier sursă) într-un limbaj inteligibil pentru maşina (cod maşină), a fost scris de Roussel la Marsilia, în 1972, folosind ALGOL şi se baza pe lucrările teoretice ale lui Colmerauer.
Cu toate acestea, la intrebarea daca logica şi, în consecinţă, matematica pot fi folosite ca limbaje de programare, trebuie raspuns negativ: O problemă exprimată într-un limbaj de programare trebuie să poată fi rezolvată de către un calculator, ori în logică şi în matematică sunt probleme care nu au soluţii algortimice şi, prin urmare, calculatorul nu este în stare să le rezolve.